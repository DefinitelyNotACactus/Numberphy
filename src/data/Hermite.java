/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package data;

/**
 *
 * @author Pablo Suria
 */
public class Hermite extends IrregularFunction {

    /**
     * Returns the polynomial generated by the Hermite interpolation
     * @param X An double array containing the X's
     * @param Y An double array containing the Y's
     * @param dif An double array containing the derivatives
     * @return An string with the polynomial
     */
    public static double interpolate(double x, double[] X, double[] Y, double[] dif) {
        int n = X.length;

        double p = 0.0;
        for (int j = 0; j < n; j++) {
            double xj = X[j];
            double ljn_num = 1;
            double ljn_den = 1;

            for (int i = 0; i < n; i++) {
                double xi = X[i];
                if (i != j) {
                    ljn_num *= (x -  xi);
                    ljn_den *= (xj - xi);
                }
            }
            double ljn = ljn_num/ljn_den;

            double diff_ljn = 0;
            for (int i = 0; i < n; i++) {
                double xi = X[i];
                if (i != j) {
                    diff_ljn += 1.0 / (xj - xi);
                }
            }

            double hjn = (1.0 - 2 * (x - xj) * diff_ljn) * (ljn * ljn );
            double hjn_ = (x - xj) * (ljn * ljn );
            
            p += (hjn *  Y[j]  + hjn_ * dif[j]);
        }
        
        return p;
    }

    public static String interpolate(double[] x, double[] y, double[] dx) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public double eval(double x) {
        
        //interpolate(x,X, Y, dif);
        return 0.0;
    }

}
